AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  email-service

  SAM Template for email-service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 15

Resources:

  EmailSendingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/emailsender.asl.json
      DefinitionSubstitutions:
        EmailSenderFunctionArn: !GetAtt EmailSenderQueueFunction.Arn
        CounterFunctionArn: !GetAtt CounterFunction.Arn
      Type: EXPRESS
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref EmailSenderQueueFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CounterFunction
      Events:
        EmailSendingSchedule:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
            Enabled: true


  CounterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: counter/
      Handler: app.lambda_handler
      Runtime: python3.9


  EmailSenderQueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: email_sender/
      Handler: app.lambda_handler_sqs
      Runtime: python3.9
      MemorySize: 512
      Policies:
        - AmazonSESFullAccess
        - AWSLambdaSQSQueueExecutionRole
      Environment:
        Variables:
          EMAIL_SQS_QUEUE_URL: !Ref EmailSqsQueue
          EMAIL_MAX_NUMBER_OF_MESSAGES: 5


  EmailSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      FifoQueue: true
      ReceiveMessageWaitTimeSeconds: 10
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt EmailSqsDLQ.Arn
        maxReceiveCount: 5


  EmailSqsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal:
              Service:
                - "sns.amazonaws.com"
            Action:
              - sqs:SendMessage
            Resource: !GetAtt EmailSqsQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: EmailSNSTopic
      Queues:
        - Ref: EmailSqsQueue


  EmailSqsDLQ:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true


  EmailSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "EmailSNSTopicEB.fifo"
      ContentBasedDeduplication: true
      FifoTopic: true


  EmailQueueToSnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt EmailSqsQueue.Arn
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !Ref EmailSNSTopic


  EmailBounceHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: email_bounce_handler/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - AmazonSESFullAccess
    Events:
      EmailBounceEvent:
        Type: SNS
        Properties:
          Topic: !GetAtt BouncedEmailSNSTopic.Arn


  BounceHandlerSNSInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
       Action: lambda:InvokeFunction
       FunctionName: !Ref EmailBounceHandlerFunction
       Principal: sns.amazonaws.com


  BouncedEmailSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "BouncedEmailSNSTopic"


  EmailBounceHandlerToSnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt EmailBounceHandlerFunction.Arn
      Protocol: lambda
      TopicArn: !Ref BouncedEmailSNSTopic

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   EmailSenderFunction:
#     Description: "Send Email Lambda Function ARN"
#     Value: !GetAtt EmailSenderFunction.Arn
